// <auto-generated />
using System;
using ChopeBastillaApplicationService.BookServiceInfrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChopeBastillaApplicationService.BookServiceInfrastructure.Migrations
{
    [DbContext(typeof(ChopeBastillaEFContext))]
    partial class ChopeBastillaEFContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ChopeBastillaApplicationService.BookServiceInfrastructure.Entity.BookDetailEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("BookDetails");
                });

            modelBuilder.Entity("ChopeBastillaApplicationService.BookServiceInfrastructure.Entity.BookEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BookDetailId")
                        .IsUnique();

                    b.ToTable("Books");
                });

            modelBuilder.Entity("ChopeBastillaApplicationService.BookServiceInfrastructure.Entity.BookEntity", b =>
                {
                    b.HasOne("ChopeBastillaApplicationService.BookServiceInfrastructure.Entity.BookDetailEntity", "BookDetail")
                        .WithOne("Book")
                        .HasForeignKey("ChopeBastillaApplicationService.BookServiceInfrastructure.Entity.BookEntity", "BookDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookDetail");
                });

            modelBuilder.Entity("ChopeBastillaApplicationService.BookServiceInfrastructure.Entity.BookDetailEntity", b =>
                {
                    b.Navigation("Book")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
